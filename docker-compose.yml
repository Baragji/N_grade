version: "3.9"

services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: runtime
    env_file:
      - .env.example
    command: ["/app/scripts/start.sh"]
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      meilisearch:
        condition: service_healthy
    ports:
      - "${APP_PORT}:8000"
    volumes:
      - ./src:/app/src
    healthcheck:
      test: ["CMD-SHELL", "python - << 'PYHC'\nimport sys, urllib.request\ntry:\n    with urllib.request.urlopen('http://localhost:8000/', timeout=3) as r:\n        sys.exit(0 if 200 <= r.status < 400 else 1)\nexcept Exception:\n    sys.exit(1)\nPYHC"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 10s

  postgres:
    image: postgres:15
    env_file:
      - .env.example
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 20s

  redis:
    image: redis:7
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 10s

  meilisearch:
    image: getmeili/meilisearch:v1.7
    env_file:
      - .env.example
    ports:
      - "${MEILISEARCH_PORT}:7700"
    volumes:
      - meili_data:/meili_data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7700/health"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  postgres_data:
  redis_data:
  meili_data:
